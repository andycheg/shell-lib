# vi: set ft=sh: 
# vi: set fdm=marker:

# check_git {{{
function check_git ()
{
	if [ -n "$GIT_PROMPT_DISABLED" ]; then
		return
	fi

	STATUS=`git status --porcelain -b 2>&1`
	if  echo "$STATUS" | grep 'Not a git repository' > /dev/null; then
		export __git=0
		export __git_branch=""
		export __git_dirty=0
	else
		export __git=1
		
		export __git_branch=`echo "$STATUS" | head -n 1 | sed 's/\.\..*//' | sed 's/## \([^ ]*\).*/\1/'`
		modified=`echo "$STATUS" | grep -vE ^##`
		if [ -z "$modified" ]; then
			export __git_dirty=0
		else
			export __git_dirty=1
		fi
	fi

	if [ $__git_dirty = 0 ]; then
		color="\[\e[0;96m\]"
	else
		color="\[\e[0;91m\]"
	fi

	if [ $__git = 0 ]; then
		export __git_prompt="\[\e[0;93m\]\u"
	else
		export __git_prompt="$color($__git_branch) "
	fi
	
	if [ -n "$HOSTALIAS" ]; then
		host="\[\e[0;34m\][$HOSTALIAS] "
	fi
	export PS1="$host$__git_prompt\[\e[0;93m\]:\[\e[0;92m\]\W \[\e[1;34m\]\$\[\e[0m\] "
}
# }}}

# gph {{{ 
function gph ()
{
	remote=$1

	if [ -z "$remote" ]; then
		echo "Using: gph <remote-name>"
		return
	fi

	if [ $__git != "1" ]; then
		echo "Not in git repository"
		return
	fi

	if [ -z "$__git_branch" ]; then
		echo "Cannot determine current branch"
		return
	fi
	
	git push $remote $__git_branch
}
# }}}

# gpl {{{ 
function gpl ()
{
	remote=$1

	if [ -z "$remote" ]; then
		echo "Using: gpl <remote-name>"
		return
	fi

	if [ $__git != "1" ]; then
		echo "Not in git repository"
		return
	fi

	if [ -z "$__git_branch" ]; then
		echo "Cannot determine current branch"
		return
	fi
	
	git pull --ff-only $remote $__git_branch
}
# }}}

# gb {{{ 
function gb ()
{
	branch=$1

	if [ -z "$branch" ]; then
		echo "Using: gp <branch-name>"
		return
	fi

	if [ $__git != "1" ]; then
		echo "Not in git repository"
		return
	fi

	git checkout $branch
}
# }}}

# gbm {{{ 
function gbm ()
{
	gb master
}
# }}}

# gdisable {{{ 
function gdisable ()
{
	export GIT_PROMPT_DISABLED=1
	export __git=0
	export __git_branch=""
	export __git_dirty=0
	export __git_prompt="\[\e[0;93m\]\u"
	
	if [ -n "$HOSTALIAS" ]; then
		host="\[\e[0;34m\][$HOSTALIAS] "
	fi

	export PS1="$host$__git_prompt\[\e[0;93m\]:\[\e[0;92m\]\W \[\e[1;34m\]\$\[\e[0m\] "
}
# }}}

# genable {{{ 
function genable ()
{
	unset GIT_PROMPT_DISABLED
}
# }}}

PROMPT_COMMAND="$PROMPT_COMMAND check_git;"
. $SHELL_LIB/git/complete.sh
